name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}

  build:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - run: pnpm build
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-${{ matrix.node }}
          path: |
            packages/*/dist
            !node_modules/**/dist

  test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: dist-${{ matrix.node }}
          path: packages
      - run: pnpm exec playwright install --with-deps chromium
      - run: pnpm test

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/setup-node
        with:
          node-version: '20'
      - run: pnpm lint

  pass:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - lint
    steps:
      - run: exit 0

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'reg-viz/storycap-testrun' && github.ref == 'refs/heads/main'
    needs: [pass]
    env:
      NODE_VERSION: 20
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: dist-${{ env.NODE_VERSION }}
          path: packages

      - name: Creating .npmrc
        run: |
          cat << EOF > ".npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF

      - name: Create Release Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1.5.3
        with:
          publish: pnpm release
          commit: 'chore: version packages'
