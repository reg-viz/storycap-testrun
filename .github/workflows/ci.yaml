name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

env:
  NODE_VERSION: 20

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: pnpm build
      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: pnpm build
      - run: pnpm typecheck

  test:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}

      - run: pnpm build

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-

      - if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps chromium

      - run: pnpm test

      - name: Upload Screenshots
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && matrix.node == env.NODE_VERSION
        with:
          name: component-screenshots
          path: __screenshots__/
          retention-days: 30

      - name: Visual Regression Test
        uses: reg-viz/reg-actions@480d59a2a63da144e914883346f5120f27701310 # v2
        if: matrix.node == env.NODE_VERSION
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          image-directory-path: './__screenshots__'
          matching-threshold: 0.1
          threshold-rate: 0.02
          enable-antialias: true

  pass:
    runs-on: ubuntu-latest
    needs:
      - lint
      - typecheck
      - test
    steps:
      - run: exit 0

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'reg-viz/storycap-testrun' && github.ref == 'refs/heads/main'
    needs: [pass]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm i -g npm@latest
      - run: pnpm build

      - name: Create Release Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1.5.3
        with:
          publish: pnpm release
          commit: 'chore: version packages'
